/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.20
 * Generated at: 2017-09-19 17:28:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import work.model.dto.Bboard;
import java.util.HashMap;

public final class Board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("work.model.dto.Bboard");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Board</title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function select(choice) {\r\n");
      out.write("\tdocument.boardForm.listed.value = 1;\r\n");
      out.write("\tdocument.boardForm.submit();\r\n");
      out.write("}\r\n");
      out.write("function listmove(choice){\r\n");
      out.write("\tdocument.boardForm.listed.value = choice;\r\n");
      out.write("\tdocument.boardForm.submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form name=\"boardForm\" action=\"Bocontroller\" method=\"post\">\r\n");
      out.write("\t\t<p align=\"right\">\r\n");
      out.write("\t\t<select onchange=\"select(this.value)\" name=\"selected\">\r\n");
      out.write("\t\t\t<option value=\"3\">3개씩 보기</option>\r\n");
      out.write("\t\t\t<option value=\"5\">5개씩 보기</option>\r\n");
      out.write("\t\t\t<option value=\"10\">10개씩 보기</option>\r\n");
      out.write("\t\t\t<option value=\"15\">15개씩 보기</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"action\" value=\"list\">\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<table border = \"1\" width=\"80%\" align=\"center\">      \r\n");
      out.write("\t\t\t<tr height=\"30px\">\r\n");
      out.write("\t\t\t\t<th width = \"7%\"><font size=2><b>번호</b></font></th>\r\n");
      out.write("\t\t\t\t<th width = \"15%\"><font size=2><b>게시글번호</b></font></th>     \r\n");
      out.write("\t\t\t\t<th width = \"*%\"><font size=2><b>제목</b></font></th>      \r\n");
      out.write("\t\t\t\t<th width = \"15%\"><font size=2><b>닉네임</b></font></th>      \r\n");
      out.write("\t\t\t\t<th width = \"17%\"><font size=2><b>등록일</b></font></th>      \r\n");
      out.write("\t\t\t\t<th width = \"10%\"><font size=2><b>조회수</b></font></th>      \r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				HashMap<String, Bboard> hash = (HashMap)request.getAttribute("result");
				System.out.println(hash);
				if((hash == null) || (hash.isEmpty())){
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr> <td colspan=6>등록된 게시글이 없습니다</td> </tr>\r\n");
      out.write("\t\t\t");
	} else {
					Bboard select = hash.get(-1);
					int selList = select.getbSelect();
					int selPage = select.getbPage();
					int selTotal = select.getbTotal();
					double pagenum = (double)selTotal/selList;
					int a = (selList*(selPage-1))+1;
					hash.remove(-1);
					for(int i=0; i<hash.size(); i++){
						Bboard dto = hash.get(a+i);
			
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<script>document.boardForm.selected.value = ");
      out.print( selList );
      out.write("</script>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( i+1 );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\"><a href=\"#\">");
      out.print( dto.getbNum() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( dto.getbTitle() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( dto.getbNick() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( dto.getbTime() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">");
      out.print( dto.getbVisit() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t");

					}
			
      out.write("\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t<p align=\"center\">\r\n");
      out.write("\t\t\t\t\t<span>|</span>\r\n");
      out.write("\t\t\t");

					for(int i=0; i<pagenum; i++){
			
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<a href=\"javascript:listmove(");
      out.print( i+1 );
      out.write(")\" name=");
      out.print( i+1 );
      out.write('>');
      out.print( i+1 );
      out.write("</a>\r\n");
      out.write("\t\t\t\t\t\t<span>|</span>\r\n");
      out.write("\t\t\t");

					}
				}
			
      out.write("\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"listed\" value=\"1\">\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
